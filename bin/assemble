#!/bin/sh

# $1: old directory name
# $2: new directory to move into
function addTo {
    mkdir -p "$PACKSDIR/$2"
    mv "$PACKSDIR/$1" "$PACKSDIR/$2"
}

# Destroy and recreate a directory, leaving it empty
function clearDir {
    DIR="$1"

    rm -rf "$DIR" > /dev/null 2>&1
    mkdir -p "$DIR"
}


function checkForShield {
    if [ "$1" == "university" ]; then return; fi
    if [ ! -d "$1/shield" ] || [ -f "$1/shield/small/PNG/university.shield.small.blue.png" ]
    then
        # No shield folder or the shield folder contains university shields, 
        # so copy over the university shield files
        echo "Copying university shield files into the $1 pack"
        cp -R "university/shield" "$1"
    fi
}

function addInFiles {
    echo "Adding resource files to $1"
    MASTER_RESOURCE_DIR="../Resources"
    if [ ! -d "$MASTER_RESOURCE_DIR" ]
    then
        echo "File directory ($MASTER_RESOURCE_DIR) not found."
        exit 0
    fi

    PACK_DIR="$(pwd)/$1"
    PACK_RESOURCE_DIR="$PACK_DIR/resources"

    # TO DO LATER: MUST DELETE ALL OLD RESOURCES FIRST
    # BUT MAKE IT ABLE TO DELETE DIRECTORIES THAT ARE
    # RESOURCE DIRS... NEED TO THINK ABOUT THIS
    # rm "$PACK_DIR"/* > /dev/null 2>&1
    rm -rf "$PACK_RESOURCE_DIR"

    mkdir "$PACK_RESOURCE_DIR"
    cp -R "$MASTER_RESOURCE_DIR"/* "$PACK_RESOURCE_DIR"
}


############################
# Begin script execution
############################

# Default directory for packs
DIR="$(pwd)"

# If a directory was passed as the first arg, use it instead
if [ $# -eq 1 ]
then
    DIR=$1
fi


PACKSDIR="$DIR/All Packs"

# If the packs directory doesn't exist, blow up
if [ ! -d "$PACKSDIR" ]
then
    echo "Error finding $PACKSDIR"
    echo "Did you run the Adobe Illustrator script first?"
    exit 1;
fi

# Change into the packs directory for good
cd "$PACKSDIR"

# Remove existing zip files
ls | grep zip$ | xargs rm

# Loop through exported directories and combine multi packs like Peabody, Libraries
# for p in $(ls)
# do
#     combine "$p"
# done

# Loop through combined directories and add University shield where needed, 
# then add in resources from ../Resources
for p in $(ls)
do
    checkForShield "$p"
    addInFiles "$p"
done

# Loop through final set of directories and zip each one
for p in $(ls)
do
    echo "Zipping up -> $p"
    zip -r "$p.zip" "$p"
done

